import java.util.*

class Game {
    companion object {
        val input = Scanner(System.`in`)
    }

    fun start() {
        //... // поздоровайтесь с пользователем - выведите в лог "Привет, поиграем в лото?"
        println("Привет, поиграем в лото?")
        //... // создайте объект Lotto, для запуска
        val lotto = Lotto()
        //... // спросите у пользователя имя нового игрока "Введите имя нового игрока" и добавьте его
        println("Введите имя нового игрока")
        // в объект Lotto. Используйте input.nextLine() для считывания с консоли.
        lotto.addPerson(Person(input.nextLine().toString()))
        while (true) {
            println(
                "Если хотите добавить ещё игрока - введите любой символ, если хотите начать игру введите 'Нет'"
            )
            //... // после добавление спросите у пользователя, хочет ли он добавить ещё одного пользователя
            // "Если хотите добавить ещё игрока - введите любой символ, если хотите начать игру введите
            // 'Нет'". Используйте input.nextLine() для считывания с консоли.
            val answer = input.nextLine()
            if (answer == "Нет") break else {
                //... // спросите у пользователя имя нового игрока "Введите имя нового игрока" и добавьте его
                println("Введите имя нового игрока")
                // в объект Lotto. Используйте input.nextLine() для считывания с консоли.
                lotto.addPerson(Person(input.nextLine().toString()))
//                lotto.addPerson(Person(answer))
            }
        }
        //... // если пользователь введёт "Нет" - завершить добавление пользователей и запустить игру
        // Lotto.start(), иначе добавить ещё одного пользователя. Добавление пользователей может быть
        // бесконечным, если пользователь никогда не введёт "Нет"
        lotto.start()
    }
}
